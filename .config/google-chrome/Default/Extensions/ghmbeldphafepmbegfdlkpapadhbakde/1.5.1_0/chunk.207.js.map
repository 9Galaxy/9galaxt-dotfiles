{"version":3,"file":"chunk.207.js","mappings":"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","sources":["webpack://proton-pass-extension/../../node_modules/bn.js/lib/bn.js","webpack://proton-pass-extension/../../node_modules/@openpgp/noble-hashes/esm/biginteger/bn.interface.js","webpack://proton-pass-extension/../../node_modules/@openpgp/noble-hashes/esm/biginteger/interface.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import BN from 'bn.js';\nimport AbstractBigInteger from './interface.js';\n/**\n * @fileoverview\n * BigInteger implementation of basic operations\n * Wrapper of bn.js library (wwww.github.com/indutny/bn.js)\n * @module biginteger/bn\n * @private\n */\n/**\n * @private\n */\nexport default class BNBigInteger extends AbstractBigInteger {\n    /**\n     * Get a BigInteger (input must be big endian for strings and arrays)\n     * @param {Number|String|Uint8Array} n - Value to convert\n     * @throws {Error} on undefined input\n     */\n    constructor(n) {\n        super(); // noop, needed for TS checks only\n        if (n === undefined) {\n            throw new Error('Invalid BigInteger input');\n        }\n        const base = ((typeof n === 'string' || n instanceof String) && n.startsWith('0x')) ? 16 : 10;\n        this.value = new BN(n, base); // Note: if n is a BN, this just returns the reference, no cloning\n    }\n    clone() {\n        return new BNBigInteger(this.value.clone());\n    }\n    /**\n     * BigInteger increment in place\n     */\n    iinc() {\n        this.value.iadd(new BN(1));\n        return this;\n    }\n    /**\n     * BigInteger increment\n     * @returns {BigInteger} this + 1.\n     */\n    inc() {\n        return this.clone().iinc();\n    }\n    /**\n     * BigInteger decrement in place\n     */\n    idec() {\n        this.value.isub(new BN(1));\n        return this;\n    }\n    /**\n     * BigInteger decrement\n     * @returns {BigInteger} this - 1.\n     */\n    dec() {\n        return this.clone().idec();\n    }\n    /**\n     * BigInteger addition in place\n     * @param {BigInteger} x - Value to add\n     */\n    iadd(x) {\n        this.value.iadd(x.value);\n        return this;\n    }\n    /**\n     * BigInteger addition\n     * @param {BigInteger} x - Value to add\n     * @returns {BigInteger} this + x.\n     */\n    add(x) {\n        return this.clone().iadd(x);\n    }\n    /**\n     * BigInteger subtraction in place\n     * @param {BigInteger} x - Value to subtract\n     */\n    isub(x) {\n        this.value.isub(x.value);\n        return this;\n    }\n    /**\n     * BigInteger subtraction\n     * @param {BigInteger} x - Value to subtract\n     * @returns {BigInteger} this - x.\n     */\n    sub(x) {\n        return this.clone().isub(x);\n    }\n    /**\n     * BigInteger multiplication in place\n     * @param {BigInteger} x - Value to multiply\n     */\n    imul(x) {\n        this.value.imul(x.value);\n        return this;\n    }\n    /**\n     * BigInteger multiplication\n     * @param {BigInteger} x - Value to multiply\n     * @returns {BigInteger} this * x.\n     */\n    mul(x) {\n        return this.clone().imul(x);\n    }\n    /**\n     * Compute value modulo m, in place\n     * @param {BigInteger} m - Modulo\n     */\n    imod(m) {\n        this.value = this.value.umod(m.value);\n        return this;\n    }\n    /**\n     * Compute value modulo m\n     * @param {BigInteger} m - Modulo\n     * @returns {BigInteger} this mod m.\n     */\n    mod(m) {\n        return this.clone().imod(m);\n    }\n    /**\n     * Compute modular exponentiation\n     * Much faster than this.exp(e).mod(n)\n     * @param {BigInteger} e - Exponent\n     * @param {BigInteger} n - Modulo\n     * @returns {BigInteger} this ** e mod n.\n     */\n    modExp(e, n) {\n        // We use either Montgomery or normal reduction context\n        // Montgomery requires coprime n and R (montogmery multiplier)\n        //  bn.js picks R as power of 2, so n must be odd\n        const nred = n.isEven() ? BN.red(n.value) : BN.mont(n.value);\n        const x = this.clone();\n        x.value = x.value.toRed(nred).redPow(e.value).fromRed();\n        return x;\n    }\n    /**\n     * Compute the inverse of this value modulo n\n     * Note: this and and n must be relatively prime\n     * @param {BigInteger} n - Modulo\n     * @returns {BigInteger} x such that this*x = 1 mod n\n     * @throws {Error} if the inverse does not exist\n     */\n    modInv(n) {\n        // invm returns a wrong result if the inverse does not exist\n        if (!this.gcd(n).isOne()) {\n            throw new Error('Inverse does not exist');\n        }\n        return new BNBigInteger(this.value.invm(n.value));\n    }\n    /**\n     * Compute greatest common divisor between this and n\n     * @param {BigInteger} n - Operand\n     * @returns {BigInteger} gcd\n     */\n    gcd(n) {\n        return new BNBigInteger(this.value.gcd(n.value));\n    }\n    /**\n     * Shift this to the left by x, in place\n     * @param {BigInteger} x - Shift value\n     */\n    ileftShift(x) {\n        this.value.ishln(x.value.toNumber());\n        return this;\n    }\n    /**\n     * Shift this to the left by x\n     * @param {BigInteger} x - Shift value\n     * @returns {BigInteger} this << x.\n     */\n    leftShift(x) {\n        return this.clone().ileftShift(x);\n    }\n    /**\n     * Shift this to the right by x, in place\n     * @param {BigInteger} x - Shift value\n     */\n    irightShift(x) {\n        this.value.ishrn(x.value.toNumber());\n        return this;\n    }\n    /**\n     * Shift this to the right by x\n     * @param {BigInteger} x - Shift value\n     * @returns {BigInteger} this >> x.\n     */\n    rightShift(x) {\n        return this.clone().irightShift(x);\n    }\n    ixor(x) {\n        this.value.ixor(x.value);\n        return this;\n    }\n    ibitwiseAnd(x) {\n        this.value.iand(x.value);\n        return this;\n    }\n    bitwiseAnd(x) {\n        return this.clone().ibitwiseAnd(x);\n    }\n    ibitwiseOr(x) {\n        this.value.ior(x.value);\n        return this;\n    }\n    /**\n     * Whether this value is equal to x\n     * @param {BigInteger} x\n     * @returns {Boolean}\n     */\n    equal(x) {\n        return this.value.eq(x.value);\n    }\n    /**\n     * Whether this value is less than x\n     * @param {BigInteger} x\n     * @returns {Boolean}\n     */\n    lt(x) {\n        return this.value.lt(x.value);\n    }\n    /**\n     * Whether this value is less than or equal to x\n     * @param {BigInteger} x\n     * @returns {Boolean}\n     */\n    lte(x) {\n        return this.value.lte(x.value);\n    }\n    /**\n     * Whether this value is greater than x\n     * @param {BigInteger} x\n     * @returns {Boolean}\n     */\n    gt(x) {\n        return this.value.gt(x.value);\n    }\n    /**\n     * Whether this value is greater than or equal to x\n     * @param {BigInteger} x\n     * @returns {Boolean}\n     */\n    gte(x) {\n        return this.value.gte(x.value);\n    }\n    isZero() {\n        return this.value.isZero();\n    }\n    isOne() {\n        return this.value.eq(new BN(1));\n    }\n    isNegative() {\n        return this.value.isNeg();\n    }\n    isEven() {\n        return this.value.isEven();\n    }\n    abs() {\n        const res = this.clone();\n        res.value = res.value.abs();\n        return res;\n    }\n    /**\n     * Get this value as a string\n     * @returns {String} this value.\n     */\n    toString() {\n        return this.value.toString();\n    }\n    /**\n     * Get this value as an exact Number (max 53 bits)\n     * Fails if this value is too large\n     * @returns {Number}\n     */\n    toNumber() {\n        return this.value.toNumber();\n    }\n    /**\n     * Get value of i-th bit\n     * @param {Number} i - Bit index\n     * @returns {Number} Bit value.\n     */\n    getBit(i) {\n        return this.value.testn(i) ? 1 : 0;\n    }\n    /**\n     * Compute bit length\n     * @returns {Number} Bit length.\n     */\n    bitLength() {\n        return this.value.bitLength();\n    }\n    /**\n     * Compute byte length\n     * @returns {Number} Byte length.\n     */\n    byteLength() {\n        return this.value.byteLength();\n    }\n    /**\n     * Get Uint8Array representation of this number\n     * @param {String} endian - Endianess of output array (defaults to 'be')\n     * @param {Number} length - Of output array\n     * @returns {Uint8Array}\n     */\n    toUint8Array(endian = 'be', length) {\n        // @ts-ignore missing Uint8Array declaration\n        return this.value.toArrayLike(Uint8Array, endian, length);\n    }\n}\n//# sourceMappingURL=bn.interface.js.map","class BigInteger {\n    static setImplementation(Implementation, replace = false) {\n        if (BigInteger.Implementation && !replace) {\n            throw new Error('Implementation already set');\n        }\n        BigInteger.Implementation = Implementation;\n    }\n    static new(n) {\n        return new BigInteger.Implementation(n);\n    }\n}\nexport { BigInteger, BigInteger as default };\n//# sourceMappingURL=interface.js.map"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","num","Array","isArray","max","left","right","cmp","init","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","bigMulTo","hncarry","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","BNBigInteger","super","String","startsWith","value","iinc","inc","idec","dec","modExp","nred","modInv","isOne","ileftShift","leftShift","irightShift","rightShift","ibitwiseAnd","bitwiseAnd","ibitwiseOr","equal","isNegative","getBit","toUint8Array","Uint8Array","BigInteger","static","Implementation"],"sourceRoot":""}